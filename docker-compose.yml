version: "3.4"

services:

  # Database
  bookstore-mysql-db:
    image: mysql:5.7
    container_name: bookstore-mysql-db
    hostname: bookstore-mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: 'bookstore_db'
      MYSQL_USER: 'bookstoreDBA'
      MYSQL_PASSWORD: 'PaSSworD'
      MYSQL_ROOT_PASSWORD: 'r00tPaSSworD'
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - bookstore-db-volume:/var/lib/mysql
    networks:
      - bookstore-app-network

  # Core services
  bookstore-consul-discovery:
    hostname: bookstore-consul-discovery
    image: consul
    container_name: bookstore-consul-discovery
    restart: always
    ports:
      - "8500:8500"
    networks:
      - bookstore-app-network

  bookstore-zuul-api-gateway-server:
    build:
      context: ./bookstore-api-gateway-service
      args:
        JAR_FILE: bookstore-api-gateway-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: bookstore-zuul-api-gateway-server
    container_name: bookstore-zuul-api-gateway-server
    hostname: bookstore-zuul-api-gateway-server
    ports:
      - "8765:8765"
    networks:
      - bookstore-app-network
    environment:
      - SERVER_PORT=8765
      - ZIPKIN_HOST=bookstore-zipkin:9411
      - SPRING_PROFILES_ACTIVE=docker

  bookstore-account-service:
    build:
      context: ./bookstore-account-service
      args:
        JAR_FILE: bookstore-account-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: bookstore-account-service
    container_name: bookstore-account-service
    hostname: bookstore-account-service
    ports:
      - "4001:4001"
    networks:
      - bookstore-app-network
    environment:
      - SERVER_PORT=4001
      - ZIPKIN_HOST=bookstore-zipkin:9411
      - SPRING_PROFILES_ACTIVE=docker

  bookstore-billing-service:
    build:
      context: ./bookstore-billing-service
      args:
        JAR_FILE: bookstore-billing-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: bookstore-billing-service
    container_name: bookstore-billing-service
    hostname: bookstore-billing-service
    ports:
      - "5001:5001"
    networks:
      - bookstore-app-network
    environment:
      - SERVER_PORT=5001
      - ZIPKIN_HOST=bookstore-zipkin:9411
      - SPRING_PROFILES_ACTIVE=docker

  bookstore-catalog-service:
    build:
      context: ./bookstore-catalog-service
      args:
        JAR_FILE: bookstore-catalog-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: bookstore-catalog-service
    container_name: bookstore-catalog-service
    hostname: bookstore-catalog-service
    ports:
      - "6001:6001"
    networks:
      - bookstore-app-network
    environment:
      - SERVER_PORT=6001
      - ZIPKIN_HOST=bookstore-zipkin:9411
      - SPRING_PROFILES_ACTIVE=docker

  bookstore-order-service:
    build:
      context: ./bookstore-order-service
      args:
        JAR_FILE: bookstore-order-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: bookstore-order-service
    container_name: bookstore-order-service
    hostname: bookstore-order-service
    ports:
      - "7001:7001"
    networks:
      - bookstore-app-network
    environment:
      - SERVER_PORT=7001
      - ZIPKIN_HOST=bookstore-zipkin:9411
      - SPRING_PROFILES_ACTIVE=docker

  bookstore-payment-service:
    build:
      context: ./bookstore-payment-service
      args:
        JAR_FILE: bookstore-payment-service-0.0.1-SNAPSHOT.jar
      dockerfile: Dockerfile
    image: bookstore-payment-service
    container_name: bookstore-payment-service
    hostname: bookstore-payment-service
    ports:
      - "8001:8001"
    networks:
      - bookstore-app-network
    environment:
      - SERVER_PORT=8001
      - ZIPKIN_HOST=bookstore-zipkin:9411
      - SPRING_PROFILES_ACTIVE=docker

  # Tracing service
  bookstore-zipkin:
    image: openzipkin/zipkin
    container_name: bookstore-zipkin
    hostname: bookstore-zipkin
    ports:
      - "9411:9411"
    networks:
      - bookstore-app-network

  # Monitoring Services
  bookstore-prometheus:
    build:
      context: ./bookstore-prometheus
      dockerfile: Dockerfile
    image: bookstore-prometheus
    container_name: bookstore-prometheus
    hostname: bookstore-prometheus
    ports:
      - "9090:9090"
    networks:
      - bookstore-app-network

  bookstore-grafana:
    build:
      context: ./bookstore-graphana
      dockerfile: Dockerfile
    image: graphana
    container_name: bookstore-graphana
    hostname: bookstore-graphana
    ports:
      - "3030:3000"
    volumes:
      - bookstore-graphana-volume:/var/lib/grafana
    networks:
      - bookstore-app-network

  # Monitoring using TICK stack.
  bookstore-telegraf:
    build:
      context: ./bookstore-telegraph
      dockerfile: Dockerfile
    image: bookstore-telegraf
    container_name: bookstore-telegraf
    hostname: bookstore-telegraf
    environment:
      HOSTNAME: "bookstore-telegraf"
    ports:
      - "8125:8125/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - bookstore-app-network

  bookstore-influxdb:
    image: influxdb
    container_name: bookstore-influxdb
    hostname: bookstore-influxdb
    volumes:
      - booksture-influxdb-volume:/var/lib/influxdb
    ports:
      - "8086:8086"
    networks:
      - bookstore-app-network

  bookstore-chronograf:
    image: chronograf:1.7.3
    container_name: bookstore-chronograf
    hostname: bookstore-chronograf
    environment:
      INFLUXDB_URL: http://bookstore-influxdb:8086
      KAPACITOR_URL: http://bookstore-kapacitor:9092
    volumes:
      - booksture-chronograf-volume:/var/lib/chronograf
    ports:
      - "8888:8888"
    restart: always
    networks:
      - bookstore-app-network

  bookstore-kapacitor:
    image: kapacitor
    container_name: bookstore-kapacitor
    hostname: bookstore-kapacitor
    environment:
      KAPACITOR_HOSTNAME: bookstore-kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://bookstore-influxdb:8086
    ports:
      - "9092:9092"
    networks:
      - bookstore-app-network

volumes:
  bookstore-db-volume:
  bookstore-graphana-volume:
  booksture-telegraph-volume:
  booksture-influxdb-volume:
  booksture-chronograf-volume:

networks:
  bookstore-app-network:
    driver: bridge
